!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS	common.h	17;"	d
BITMAPFILEHEADER	bmp.h	/^}__attribute__((packed)) BITMAPFILEHEADER; $/;"	t	typeref:struct:__anon3
BITMAPFILEHEADER	mkbmp/bmp.h	/^}__attribute__((packed)) BITMAPFILEHEADER; $/;"	t	typeref:struct:__anon9
BITMAPINFOHEADER	bmp.h	/^}__attribute__((packed)) BITMAPINFOHEADER;$/;"	t	typeref:struct:__anon4
BITMAPINFOHEADER	mkbmp/bmp.h	/^}__attribute__((packed)) BITMAPINFOHEADER;$/;"	t	typeref:struct:__anon10
Bpp	surface.h	/^    int Bpp;$/;"	m	struct:__anon2	access:public
FILE_BROKEN	bmp.h	/^    FILE_BROKEN,$/;"	e	enum:__anon6
FILE_BROKEN	mkbmp/bmp.h	/^    FILE_BROKEN,$/;"	e	enum:__anon12
FILE_NOT_EXIST	bmp.h	/^    FILE_NOT_EXIST,$/;"	e	enum:__anon6
FILE_NOT_EXIST	mkbmp/bmp.h	/^    FILE_NOT_EXIST,$/;"	e	enum:__anon12
FORMAL_NOT_SUPPORT	bmp.h	/^    FORMAL_NOT_SUPPORT,$/;"	e	enum:__anon6
FORMAL_NOT_SUPPORT	mkbmp/bmp.h	/^    FORMAL_NOT_SUPPORT,$/;"	e	enum:__anon12
LEFT_ROTATE	bmp.h	/^    LEFT_ROTATE,$/;"	e	enum:__anon7
LEFT_ROTATE	mkbmp/bmp.h	/^    LEFT_ROTATE,$/;"	e	enum:__anon13
MALLOC_FAIL	bmp.h	/^   MALLOC_FAIL, $/;"	e	enum:__anon8
MALLOC_FAIL	mkbmp/bmp.h	/^   MALLOC_FAIL, $/;"	e	enum:__anon14
MAX	common.h	13;"	d
MIN	common.h	15;"	d
RGBA888TORGBA656	main.c	16;"	d	file:
RIGHT_ROTATE	bmp.h	/^    RIGHT_ROTATE,$/;"	e	enum:__anon7
RIGHT_ROTATE	mkbmp/bmp.h	/^    RIGHT_ROTATE,$/;"	e	enum:__anon13
SWAP	common.h	4;"	d
__BMP_H__	bmp.h	2;"	d
__BMP_H__	mkbmp/bmp.h	2;"	d
__COMMON_H__	common.h	2;"	d
__LINE_H__	line.h	2;"	d
__POINT_H__	point.h	2;"	d
__SURFACE_H__	surface.h	2;"	d
__anon10::biBitCount	mkbmp/bmp.h	/^    int16_t biBitCount; $/;"	m	struct:__anon10	access:public
__anon10::biClrImportant	mkbmp/bmp.h	/^    int32_t biClrImportant; $/;"	m	struct:__anon10	access:public
__anon10::biClrUsed	mkbmp/bmp.h	/^    int32_t biClrUsed; $/;"	m	struct:__anon10	access:public
__anon10::biCompression	mkbmp/bmp.h	/^    int32_t biCompression; $/;"	m	struct:__anon10	access:public
__anon10::biHeight	mkbmp/bmp.h	/^    int32_t biHeight; $/;"	m	struct:__anon10	access:public
__anon10::biPlanes	mkbmp/bmp.h	/^    int16_t biPlanes; $/;"	m	struct:__anon10	access:public
__anon10::biSize	mkbmp/bmp.h	/^    int32_t biSize; $/;"	m	struct:__anon10	access:public
__anon10::biSizeImage	mkbmp/bmp.h	/^    int32_t biSizeImage; $/;"	m	struct:__anon10	access:public
__anon10::biWidth	mkbmp/bmp.h	/^    int32_t biWidth; $/;"	m	struct:__anon10	access:public
__anon10::biXPelsPerMeter	mkbmp/bmp.h	/^    int32_t biXPelsPerMeter; $/;"	m	struct:__anon10	access:public
__anon10::biYPelsPerMeter	mkbmp/bmp.h	/^    int32_t biYPelsPerMeter; $/;"	m	struct:__anon10	access:public
__anon11::bpp	mkbmp/bmp.h	/^    short bpp;$/;"	m	struct:__anon11	access:public
__anon11::buf	mkbmp/bmp.h	/^    uint8_t buf[0];$/;"	m	struct:__anon11	access:public
__anon11::height	mkbmp/bmp.h	/^    int height;$/;"	m	struct:__anon11	access:public
__anon11::stride	mkbmp/bmp.h	/^    uint16_t stride;$/;"	m	struct:__anon11	access:public
__anon11::width	mkbmp/bmp.h	/^    int width;$/;"	m	struct:__anon11	access:public
__anon1::x	point.h	/^    uint16_t x,y;$/;"	m	struct:__anon1	access:public
__anon1::y	point.h	/^    uint16_t x,y;$/;"	m	struct:__anon1	access:public
__anon2::Bpp	surface.h	/^    int Bpp;$/;"	m	struct:__anon2	access:public
__anon2::buf	surface.h	/^    char *buf;$/;"	m	struct:__anon2	access:public
__anon2::color_key	surface.h	/^    uint32_t color_key;$/;"	m	struct:__anon2	access:public
__anon2::fd	surface.h	/^    int fd;$/;"	m	struct:__anon2	access:public
__anon2::height	surface.h	/^    int height;$/;"	m	struct:__anon2	access:public
__anon2::stride	surface.h	/^    int stride;$/;"	m	struct:__anon2	access:public
__anon2::virtual_height	surface.h	/^    int virtual_height;$/;"	m	struct:__anon2	access:public
__anon2::virtual_width	surface.h	/^    int virtual_width;$/;"	m	struct:__anon2	access:public
__anon2::width	surface.h	/^    int width;$/;"	m	struct:__anon2	access:public
__anon2::xoff	surface.h	/^    int xoff;$/;"	m	struct:__anon2	access:public
__anon2::yoff	surface.h	/^    int yoff;$/;"	m	struct:__anon2	access:public
__anon3::bfOffBits	bmp.h	/^    int32_t bfOffBits; $/;"	m	struct:__anon3	access:public
__anon3::bfReserved1	bmp.h	/^    uint16_t bfReserved1; $/;"	m	struct:__anon3	access:public
__anon3::bfReserved2	bmp.h	/^    uint16_t bfReserved2; $/;"	m	struct:__anon3	access:public
__anon3::bfSize	bmp.h	/^    int32_t bfSize; $/;"	m	struct:__anon3	access:public
__anon3::bfType	bmp.h	/^    uint16_t bfType;    $/;"	m	struct:__anon3	access:public
__anon4::biBitCount	bmp.h	/^    int16_t biBitCount; $/;"	m	struct:__anon4	access:public
__anon4::biClrImportant	bmp.h	/^    int32_t biClrImportant; $/;"	m	struct:__anon4	access:public
__anon4::biClrUsed	bmp.h	/^    int32_t biClrUsed; $/;"	m	struct:__anon4	access:public
__anon4::biCompression	bmp.h	/^    int32_t biCompression; $/;"	m	struct:__anon4	access:public
__anon4::biHeight	bmp.h	/^    int32_t biHeight; $/;"	m	struct:__anon4	access:public
__anon4::biPlanes	bmp.h	/^    int16_t biPlanes; $/;"	m	struct:__anon4	access:public
__anon4::biSize	bmp.h	/^    int32_t biSize; $/;"	m	struct:__anon4	access:public
__anon4::biSizeImage	bmp.h	/^    int32_t biSizeImage; $/;"	m	struct:__anon4	access:public
__anon4::biWidth	bmp.h	/^    int32_t biWidth; $/;"	m	struct:__anon4	access:public
__anon4::biXPelsPerMeter	bmp.h	/^    int32_t biXPelsPerMeter; $/;"	m	struct:__anon4	access:public
__anon4::biYPelsPerMeter	bmp.h	/^    int32_t biYPelsPerMeter; $/;"	m	struct:__anon4	access:public
__anon5::bpp	bmp.h	/^    short bpp;$/;"	m	struct:__anon5	access:public
__anon5::buf	bmp.h	/^    uint8_t buf[0];$/;"	m	struct:__anon5	access:public
__anon5::height	bmp.h	/^    int height;$/;"	m	struct:__anon5	access:public
__anon5::stride	bmp.h	/^    uint16_t stride;$/;"	m	struct:__anon5	access:public
__anon5::width	bmp.h	/^    int width;$/;"	m	struct:__anon5	access:public
__anon9::bfOffBits	mkbmp/bmp.h	/^    int32_t bfOffBits; $/;"	m	struct:__anon9	access:public
__anon9::bfReserved1	mkbmp/bmp.h	/^    uint16_t bfReserved1; $/;"	m	struct:__anon9	access:public
__anon9::bfReserved2	mkbmp/bmp.h	/^    uint16_t bfReserved2; $/;"	m	struct:__anon9	access:public
__anon9::bfSize	mkbmp/bmp.h	/^    int32_t bfSize; $/;"	m	struct:__anon9	access:public
__anon9::bfType	mkbmp/bmp.h	/^    uint16_t bfType;    $/;"	m	struct:__anon9	access:public
bfOffBits	bmp.h	/^    int32_t bfOffBits; $/;"	m	struct:__anon3	access:public
bfOffBits	mkbmp/bmp.h	/^    int32_t bfOffBits; $/;"	m	struct:__anon9	access:public
bfReserved1	bmp.h	/^    uint16_t bfReserved1; $/;"	m	struct:__anon3	access:public
bfReserved1	mkbmp/bmp.h	/^    uint16_t bfReserved1; $/;"	m	struct:__anon9	access:public
bfReserved2	bmp.h	/^    uint16_t bfReserved2; $/;"	m	struct:__anon3	access:public
bfReserved2	mkbmp/bmp.h	/^    uint16_t bfReserved2; $/;"	m	struct:__anon9	access:public
bfSize	bmp.h	/^    int32_t bfSize; $/;"	m	struct:__anon3	access:public
bfSize	mkbmp/bmp.h	/^    int32_t bfSize; $/;"	m	struct:__anon9	access:public
bfType	bmp.h	/^    uint16_t bfType;    $/;"	m	struct:__anon3	access:public
bfType	mkbmp/bmp.h	/^    uint16_t bfType;    $/;"	m	struct:__anon9	access:public
biBitCount	bmp.h	/^    int16_t biBitCount; $/;"	m	struct:__anon4	access:public
biBitCount	mkbmp/bmp.h	/^    int16_t biBitCount; $/;"	m	struct:__anon10	access:public
biClrImportant	bmp.h	/^    int32_t biClrImportant; $/;"	m	struct:__anon4	access:public
biClrImportant	mkbmp/bmp.h	/^    int32_t biClrImportant; $/;"	m	struct:__anon10	access:public
biClrUsed	bmp.h	/^    int32_t biClrUsed; $/;"	m	struct:__anon4	access:public
biClrUsed	mkbmp/bmp.h	/^    int32_t biClrUsed; $/;"	m	struct:__anon10	access:public
biCompression	bmp.h	/^    int32_t biCompression; $/;"	m	struct:__anon4	access:public
biCompression	mkbmp/bmp.h	/^    int32_t biCompression; $/;"	m	struct:__anon10	access:public
biHeight	bmp.h	/^    int32_t biHeight; $/;"	m	struct:__anon4	access:public
biHeight	mkbmp/bmp.h	/^    int32_t biHeight; $/;"	m	struct:__anon10	access:public
biPlanes	bmp.h	/^    int16_t biPlanes; $/;"	m	struct:__anon4	access:public
biPlanes	mkbmp/bmp.h	/^    int16_t biPlanes; $/;"	m	struct:__anon10	access:public
biSize	bmp.h	/^    int32_t biSize; $/;"	m	struct:__anon4	access:public
biSize	mkbmp/bmp.h	/^    int32_t biSize; $/;"	m	struct:__anon10	access:public
biSizeImage	bmp.h	/^    int32_t biSizeImage; $/;"	m	struct:__anon4	access:public
biSizeImage	mkbmp/bmp.h	/^    int32_t biSizeImage; $/;"	m	struct:__anon10	access:public
biWidth	bmp.h	/^    int32_t biWidth; $/;"	m	struct:__anon4	access:public
biWidth	mkbmp/bmp.h	/^    int32_t biWidth; $/;"	m	struct:__anon10	access:public
biXPelsPerMeter	bmp.h	/^    int32_t biXPelsPerMeter; $/;"	m	struct:__anon4	access:public
biXPelsPerMeter	mkbmp/bmp.h	/^    int32_t biXPelsPerMeter; $/;"	m	struct:__anon10	access:public
biYPelsPerMeter	bmp.h	/^    int32_t biYPelsPerMeter; $/;"	m	struct:__anon4	access:public
biYPelsPerMeter	mkbmp/bmp.h	/^    int32_t biYPelsPerMeter; $/;"	m	struct:__anon10	access:public
bmp_err_e	bmp.h	/^}bmp_err_e;$/;"	t	typeref:enum:__anon6
bmp_err_e	mkbmp/bmp.h	/^}bmp_err_e;$/;"	t	typeref:enum:__anon12
bmp_info_t	bmp.h	/^}bmp_info_t;$/;"	t	typeref:struct:__anon5
bmp_info_t	mkbmp/bmp.h	/^}bmp_info_t;$/;"	t	typeref:struct:__anon11
bmp_left_rotate	mkbmp/bmp.h	/^int bmp_left_rotate(bmp_info_t *pbmpinfo,bmp_rotate_e direction);$/;"	p	signature:(bmp_info_t *pbmpinfo,bmp_rotate_e direction)
bmp_rotate	bmp.c	/^int bmp_rotate(bmp_info_t *pbmpinfo,bmp_rotate_e direction)$/;"	f	signature:(bmp_info_t *pbmpinfo,bmp_rotate_e direction)
bmp_rotate	bmp.h	/^int bmp_rotate(bmp_info_t *pbmpinfo,bmp_rotate_e direction);$/;"	p	signature:(bmp_info_t *pbmpinfo,bmp_rotate_e direction)
bmp_rotate_e	bmp.h	/^}bmp_rotate_e;$/;"	t	typeref:enum:__anon7
bmp_rotate_e	mkbmp/bmp.h	/^}bmp_rotate_e;$/;"	t	typeref:enum:__anon13
bool	common.h	/^typedef char	bool;$/;"	t
bpp	bmp.h	/^    short bpp;$/;"	m	struct:__anon5	access:public
bpp	mkbmp/bmp.h	/^    short bpp;$/;"	m	struct:__anon11	access:public
bpp	mkbmp/mkbmp.c	/^static int32_t width = 1376,height = 768,bpp = 32;$/;"	v	file:
buf	bmp.h	/^    uint8_t buf[0];$/;"	m	struct:__anon5	access:public
buf	mkbmp/bmp.h	/^    uint8_t buf[0];$/;"	m	struct:__anon11	access:public
buf	surface.h	/^    char *buf;$/;"	m	struct:__anon2	access:public
color_key	surface.h	/^    uint32_t color_key;$/;"	m	struct:__anon2	access:public
common_err_e	bmp.h	/^}common_err_e;$/;"	t	typeref:enum:__anon8
common_err_e	mkbmp/bmp.h	/^}common_err_e;$/;"	t	typeref:enum:__anon14
coord_t	point.h	/^}coord_t;$/;"	t	typeref:struct:__anon1
fd	surface.h	/^    int fd;$/;"	m	struct:__anon2	access:public
flag_i	mkbmp/mkbmp.c	/^static char flag_o,flag_i,option_bpp,xres,yres;$/;"	v	file:
flag_o	mkbmp/mkbmp.c	/^static char flag_o,flag_i,option_bpp,xres,yres;$/;"	v	file:
get_pixel	point.h	/^inline int get_pixel(surface_t *sur,coord_t point,uint32_t *color)$/;"	f	signature:(surface_t *sur,coord_t point,uint32_t *color)
height	bmp.h	/^    int height;$/;"	m	struct:__anon5	access:public
height	mkbmp/bmp.h	/^    int height;$/;"	m	struct:__anon11	access:public
height	mkbmp/mkbmp.c	/^static int32_t width = 1376,height = 768,bpp = 32;$/;"	v	file:
height	surface.h	/^    int height;$/;"	m	struct:__anon2	access:public
i16	common.h	/^typedef short   i16;$/;"	t
line	line.c	/^int line(surface_t *sur,coord_t point0,coord_t point1,uint32_t color)$/;"	f	signature:(surface_t *sur,coord_t point0,coord_t point1,uint32_t color)
line	line.h	/^extern int line(surface_t *sur,coord_t point0,coord_t point1,uint32_t color);$/;"	p	signature:(surface_t *sur,coord_t point0,coord_t point1,uint32_t color)
line_horizontal	line.c	/^int line_horizontal(surface_t *sur,coord_t point,uint16_t len,uint32_t color)$/;"	f	signature:(surface_t *sur,coord_t point,uint16_t len,uint32_t color)
line_horizontal	line.h	/^extern int line_horizontal(surface_t *sur,coord_t point,uint16_t len,uint32_t color);$/;"	p	signature:(surface_t *sur,coord_t point,uint16_t len,uint32_t color)
line_vertical	line.c	/^int line_vertical(surface_t *sur,coord_t point,uint16_t len ,uint32_t color)$/;"	f	signature:(surface_t *sur,coord_t point,uint16_t len ,uint32_t color)
line_vertical	line.h	/^extern int line_vertical(surface_t *sur,coord_t point,uint16_t len ,uint32_t color);$/;"	p	signature:(surface_t *sur,coord_t point,uint16_t len ,uint32_t color)
load_bmp	bmp.c	/^bmp_info_t *load_bmp(char *file)$/;"	f	signature:(char *file)
load_bmp	bmp.h	/^bmp_info_t *load_bmp(char *file);$/;"	p	signature:(char *file)
load_bmp	mkbmp/bmp.h	/^bmp_info_t *load_bmp(char *file);$/;"	p	signature:(char *file)
main	main.c	/^int main( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
main	mkbmp/mkbmp.c	/^int main(int argc,char *argv[])$/;"	f	signature:(int argc,char *argv[])
openfb	main.c	/^extern int openfb(char *devname,surface_t *sur);$/;"	p	file:	signature:(char *devname,surface_t *sur)
openfb	surface.c	/^int openfb(char *devname,surface_t *sur)$/;"	f	signature:(char *devname,surface_t *sur)
openfb	surface.h	/^extern int openfb(char *devname,surface_t *sur);$/;"	p	signature:(char *devname,surface_t *sur)
option_bpp	mkbmp/mkbmp.c	/^static char flag_o,flag_i,option_bpp,xres,yres;$/;"	v	file:
set_pixel	point.h	/^inline int set_pixel(surface_t *sur,coord_t point,uint32_t color)$/;"	f	signature:(surface_t *sur,coord_t point,uint32_t color)
show_bmp	main.c	/^int  show_bmp  ( char *bmpfile,surface_t *sur );$/;"	p	file:	signature:( char *bmpfile,surface_t *sur )
show_bmp	main.c	/^int show_bmp( char *bmpfile,surface_t *sur)$/;"	f	signature:( char *bmpfile,surface_t *sur)
stride	bmp.h	/^    uint16_t stride;$/;"	m	struct:__anon5	access:public
stride	mkbmp/bmp.h	/^    uint16_t stride;$/;"	m	struct:__anon11	access:public
stride	surface.h	/^    int stride;$/;"	m	struct:__anon2	access:public
surface_t	surface.h	/^}surface_t;$/;"	t	typeref:struct:__anon2
virtual_height	surface.h	/^    int virtual_height;$/;"	m	struct:__anon2	access:public
virtual_width	surface.h	/^    int virtual_width;$/;"	m	struct:__anon2	access:public
width	bmp.h	/^    int width;$/;"	m	struct:__anon5	access:public
width	mkbmp/bmp.h	/^    int width;$/;"	m	struct:__anon11	access:public
width	mkbmp/mkbmp.c	/^static int32_t width = 1376,height = 768,bpp = 32;$/;"	v	file:
width	surface.h	/^    int width;$/;"	m	struct:__anon2	access:public
x	point.h	/^    uint16_t x,y;$/;"	m	struct:__anon1	access:public
xoff	surface.h	/^    int xoff;$/;"	m	struct:__anon2	access:public
xres	mkbmp/mkbmp.c	/^static char flag_o,flag_i,option_bpp,xres,yres;$/;"	v	file:
y	point.h	/^    uint16_t x,y;$/;"	m	struct:__anon1	access:public
yoff	surface.h	/^    int yoff;$/;"	m	struct:__anon2	access:public
yres	mkbmp/mkbmp.c	/^static char flag_o,flag_i,option_bpp,xres,yres;$/;"	v	file:
